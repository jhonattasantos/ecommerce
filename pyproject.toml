[tool.poetry]
name = "ecommerce"
version = "0.1.0"
description = "Sistema de e-commerce"
authors = ["jhonatta <jhonattasantoss@outlook.com>"]
readme = "README.md"
packages = [{include = "ecommerce"}]

[tool.poetry.dependencies]
python = ">=3.13"
sqlalchemy = "^2.0.39"
asyncio = "^3.4.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
mypy = "^1.15.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
autopep8 = "^2.3.2"
ruff = "^0.11.2"

[tool.ruff]
# Regras básicas (incluindo todas as regras do Flake8)
line-length = 79
target-version = "py313"
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
]


[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "NPY", # NumPy-specific rules
]
ignore = [
    "D203",  # one-blank-line-before-class
    "D213",  # multi-line-summary-second-line
]

# Configurações específicas para imports (equivalente ao isort)
[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
force-wrap-aliases = true

# Configurações para formatação (equivalente ao black)
[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

addopts = "--verbose"
markers = [
    "unit: marca testes unitários",
    "integration: marca testes de integração",
    "slow: marca testes que demoram mais para executar",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
